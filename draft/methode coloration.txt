def coloration(self) : 
        # initializing the color list of -1 (uncolored) of each vertex
        colour = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]
        
        colour[0] = 0 #assignation of the first colour to the first node
        # temporary list of colors for the neighbor nodes
        temp =[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]
        
        for i in range(0,30,3) :    # there are 30 lists in the graph 
            
            # if the node is colored
            if colour[self.graph[i][0]] != -1 : 
                temp[self.graph[i][0]] = colour[self.graph[i][0]] # store the color in temp
            
            # if the node is not colored
            if colour[self.graph[i][1]] == -1 :
                # store the neighbors' colors in temp 
                temp.extend([colour[self.graph[3*self.graph[i][1]][1]], colour[self.graph[3*self.graph[i][1]+1][1]], colour[self.graph[3*self.graph[i][1]+2][1]]])
                for k in range(4) : 
                    if k not in temp : # assign the color not present in temp (i.e not already used by a neighbor)
                        colour[self.graph[i][1]] = k
                        break
                temp =[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]
                temp[self.graph[i][0]] = colour[self.graph[i][0]]

            if colour[self.graph[i+1][1]] == -1 :
                temp.extend([colour[self.graph[3*self.graph[i+1][1]][1]], colour[self.graph[3*self.graph[i+1][1]+1][1]], colour[self.graph[3*self.graph[i+1][1]+2][1]]])

                for k in range(4) : 
                    if k not in temp : 
                        colour[self.graph[i+1][1]] = k
                        break
                temp =[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]
                temp[self.graph[i][0]] = colour[self.graph[i][0]]

            if colour[self.graph[i+2][1]] == -1 :
                temp.extend([colour[self.graph[3*self.graph[i+2][1]][1]], colour[self.graph[3*self.graph[i+2][1]+1][1]], colour[self.graph[3*self.graph[i+2][1]+2][1]]])

                for k in range(4) : 
                    if k not in temp : 
                        colour[self.graph[i+2][1]] = k
                        break
                temp =[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]

            temp[self.graph[i][0]] = -1

        for i in range(10) : 
            print("Player "+str(i)+" ----> "+str(colour[i]))
        dico = {}
        for i in range(10) : 
            dico[i] = colour[i]
        return dico